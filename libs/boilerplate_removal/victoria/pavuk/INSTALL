pavuk0.9 installation
---------------------

What you need:
--------------
  - GCC or other ANSI C compiler (Digital OSF/1 3.2 cc successfully tested)
  - optionally X11 libraries - R5 and R6 tested
  - optionally GTK libraries (1.0.0 or higher required, older may not work
         because of API changes and new widgets)
         when you want multithreading support, you need
         at least version 1.2.0
  - optionally SSLeay or OpenSSL package -
         when you plan to use pavuk for mirroring and or
         transferring documents via HTTPS (SSL) , you need
         to have installed SSLeay package at least v0.8.0
  - optionally SOCKS 4 or 5 package for supporting your SOCKS firewall
  - optionally GNU gettext library for internationalized messages support
  - optionally support for regular expressions in libc (POSIX, GNU, BSD,
    Bell V8, PCRE or TRE implementation)
  - optionally Berkeley db 1.8x library to support loading files from
    Netscape or Mozilla browser cache directory
  - optionally zlib library to support document decoding without calling
    gzip program
  - optionally pthread (POSIX threads) library for support multithreading
    (in this case all other used libraries should be compiled and
           designed to support multithreading - mainly X and GTK)
  - optionally libdes or OpenSSL libcrypto to support NTLM authorization
  - optionally Mozillas JavaScript runtime library libjs to support
    JavaScript bindings
  - optionally Netscape/Mozilla NSS3 and NSPR libraries to support SSL
    when you can't or don't want to use OpenSSL which is not GPL
    compatible
  - optionally libmcrypt or libgrypt libraries (with DES support) to
    support NTLM authorization and don't want to link with libcrypt
    which is part of OpenSSL which is not GPL compatible


Installing
----------
type 
	tar -xzvf pavuk-0.9.tgz
or 
	gunzip -c pavuk-0.9.tgz | tar -xf -
to unpack source

Change directory to pavuk-0.9 and type

	./configure

to configure package for your system setup. Configure script accepts some
extra options, to allow better tuning of pavuk features:

	--enable-threads - to enable compilation with multithreading support
	--disable-socks  - to disable compilation of SOCKS support
	--disable-gtk	 - to disable compilation of GTK interface
	--disable-ssl    - to disable compilation of SSL support
	--disable-nls	 - to disable compilation with gettext NLS
	--disable-debug  - to disable compilation with debuging support
        --disable-debugging - to disable inclusion of source level debug info
                           in the pavuk binary, i.e. create a 'true' 
                           'release build' binary
        --disable-debug-features - exclude -debug and -debug_level command line
                           option support
	--disable-gnome  - to deny instalation of pavuks Gnome related files
	--disable-ntlm   - do not compile with NTLM auth support
	--disable-tree   - do not compile with tree preview
			   (saves a lot of memory when running GUI)
	--disable-js     - to disable compilation of JavaScript bindings support
	--disable-ipv6   - to disable support of IPv6 protocol
	--with-*-includes - you should specify location of header
			    files for optionals packages
			    (ssl,gtk,intl,zlib,socks,js)
	--with-*-libraries - you should specify location of libraries
			     for optional packages
			     (ssl,gtk,intl,zlib,socks,js)
	--with-locale-dir - path to your locale directory
	--with-regex=[none/auto/posix/gnu/v8/bsd/pcre/tre]
			 - for selecting required regular expressions 
                           implemetation, if your system contains multiple
			   supported implementation
	--with-ssl=[none/auto/openssl/ssleay/nss]
			 - for selecting requested SSL library implementation
	--with-desimpl=[none/auto/libcrypto/libdes/libmcrypt/libgcrypt]
			 - for selecting requested DES algorithm implementation
			   library
	--with-egd-socket=NAME - use NAME for the EGD socket

for more options check configure --help.

See the section about 'Debugging features' below for more info on the debug
features.

To compile package, type at command line

	make

To install package, type at command line

	make install

This will copy pavuk binary, manual page, message catalogs and other files
to destination directories.

Feel free to email me if you have some problems with pavuk installation or
use.

Contact
-------

If you can't successfully build this program please contact me via email :
<ondrej@idata.sk>.

Or post a message to the pavuk mailing list at sourceforge.

Debugging features
------------------

As of 0.6.36, there are three ./configure options that determine the (debug) 
feature set and use of your binary:

  --enable/disable-debugging --> compile a binary with source level debug info included
                                 and all optimizations DISabled for improved debugging
                                 (by using gdb or another debugger of your choice)

  --enable/disable-debug     --> include/exclude additional run time checks in your
                                 binary. Most important are the ASSERT and VERIFY
                                 pre/post-condition validation methods located throughout
                                 the code. The use of these is advised, though these
                                 may cause a performance hit.

  --enable/disable-debug-features 
                             --> include/exclude user level -debug/-debug_level command
                                 line features, which help you as a pavuk user to 'debug'
                                 a run by analyzing the output of pavuk during the run.
                                 Using -debug, pavuk will be EXTREMELY verbose, which can
                                 be toned down by applying a -debug_level restriction 
                                 filter. For example:

                                   -debug -debug_level all,!devel

                                 will be VERY verbose, but will NOT log any DEVEL level
                                 debug info, while:

                                   -debug -debug_level !all,rules

                                 will ONLY produce additional output for the RULES level, i.e.
                                 when pavuk processes -fnrules and/or JavaScript macros.

When you are going to create a 'release build' for packaging and distribution to other
users (and the package has been tested and is assumed to be a 'stable' release), you should:

  --disable-debugging 
    (regular users don't run debuggers anyway ;-) )
  --disable-debug
    (t'was all tested, n'est pas?)
  --enable-debug-features
    (pavuk is a complex beast at times; a bit of help always comes in handy)

Alpha/Beta/'unstable' releases/packages should:

  --disable-debugging 
    (regular users don't run debuggers anyway ;-) )
* --enable-debug
    (it's a beta build, so bugs may happen; extra checks are welcome)
  --enable-debug-features
    (pavuk is a complex beast at times; a bit of help always comes in handy)

'*' above marks the difference between unstable and stable release builds.

Default settings for ./configure currently are the 'stable release' settings listed above.
