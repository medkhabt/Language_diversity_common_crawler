This file contain know bugs and limitations of pavuk program. If you find 
any other, please write a short description to any of the active developers:

* modes based on directory scan (resumeregets & directory based sync mode) 
  shold have different interpretation of some limit options (-lmax, 
  -leave_level,-site_level)

* HTML forms filling dialog looks horrible, but I mean that it is usable

* GTK+1.0 can't be used for GUI when running multithreaded


version 0.9.36cvs:

* parent url update file I/O code will report errors on tl_rename when 
  running pavuk in multithreaded mode (which is default) on native Win32 :-(
  
  This has NOT been tested on UNIX platforms, but may exist there too.
  
  This error only turned up when we added error checking to the tl_rename() 
  operation (see ChangeLog).

* JavaScript library is compiled in non-threadsafe mode (i.e. without nspr) 
  on Win32 (and UNIX?). This may cause trouble when using JS-based filters.
  
  This has NOT been verified (currently no testcase exists to produce either 
  behaviour)
  
* using lockfiles is flawed, at least on Win32, as you cannot unlink/delete 
  a file which is still open. See dinfo_remove() et al.
  
  As I don't think this is about supporting multiple instances of pavuk 
  accessing the same 'store' but only about supporting locking for a 
  multithreaded run, we could instead handle this completely in memory by 
  keeping locking semaphores with each downloaded URL/file in the filename-
  cache that is kept by pavuk anyway.
  
  Hm, a separate hash table with each of the directories and then one 
  semaphore for each to duplicate the locking behaviour in memory?
